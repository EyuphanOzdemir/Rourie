@model RourieWebAPI.Models.UserViewModel

@{
    ViewData["Title"] = "Users";
}


@{
    var prevId = @Model.PageId - 1;
    var nextId = @Model.PageId + 1;

    string rowCountMessage = "";
    if (@Model.RowCount == 0)
    {
        rowCountMessage = "No user found!";
    }
    else
    {
        rowCountMessage = @Model.RowCount + " user(s) found";
    }
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Index" method="get">
            <div class="form-group">
                <label title="User Type:" class="control-label">User Type:</label>
                <label title="Search:" class="control-label">Search:</label>
                <input class="form-control valid" type="text" id="search" name="search" value="@Model.SearchTerm" data-val="true" data-val-minlength="The search term should have at least 3 characters" data-val-minlength-min="3" placeholder="Enter a search term with at least 3 characters">
                <span class="text-danger field-validation-valid" data-valmsg-for="search" data-valmsg-replace="true"></span>
                <span>@rowCountMessage</span>
            </div>
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<br />
<br />

<div class="row">

    @if (prevId > 0)
    {
        <a asp-action="Index" asp-route-pageId="1" asp-route-search="@Model.SearchTerm"> First 10  </a>
        <a asp-action="Index" asp-route-pageId="@prevId" asp-route-search="@Model.SearchTerm"> | Previous 10  </a>
    }


    @if (nextId <= Model.GroupCount)
    {
         <a asp-action="Index" asp-route-pageId="@nextId" asp-route-search="@Model.SearchTerm"> | Next 10  </a>
         <a asp-action="Index" asp-route-pageId="@Model.GroupCount" asp-route-search="@Model.SearchTerm"> | Last 10  </a>
    }

</div>




<table class="table">
    <thead>
        <tr>
            <th>
                <span value="User name">User name</span>
            </th>
            <th>
                <span value="Email">E-Mail</span>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Users)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
        </tr>
        }
    </tbody>
</table>
